Question :https://leetcode.com/problems/count-number-of-ways-to-place-houses/

Solution :
class Solution {
    
    /* This is my tabulation method
    public int getPossibleCount(int n) {
        if(n==0) return 1;
        if(n==1) return 2;

        long[] dp = new long[n+1];
        dp[0] = 1;
        dp[1] = 2;

        for(int i=2;i<=n;i++) {
            dp[i] = (dp[i-1] + dp[i-2])%1_000_000_007;
        }

        return (int)dp[n];
    }

    public int countHousePlacements(int n) {
        long placement = getPossibleCount(n);
        long res = (placement*placement)%1_000_000_007;

        return (int)res;
    }*/

    public int getPlacement(int n) {
        if(n==0) return 1;
        if(n==1) return 2;

        long first_step=1,sec_step=2,temp=0;

        for(int i=2;i<=n;i++) {
            temp = (first_step + sec_step)%1_000_000_007;
            first_step = sec_step;
            sec_step = temp;
        }

        return (int) temp;
    }

    public int countHousePlacements(int n) {
        long placement = getPlacement(n);
        long res = (placement* placement)%1_000_000_007;

        return (int)res;
    }
}
