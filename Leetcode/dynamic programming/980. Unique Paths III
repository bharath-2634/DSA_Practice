Question:https://leetcode.com/problems/unique-paths-iii/

Solution:
class Solution {

    public int getUniquePaths(int[][] grid,int row,int col,int remaining) {
        if(row<0 || row>=grid.length || col<0 || col>=grid[0].length || grid[row][col]==-1) return 0;

        if(grid[row][col]==2) return remaining==0 ? 1:0;

        grid[row][col] = -1;

        int count = 0;
        count+=getUniquePaths(grid,row+1,col,remaining-1);
        count+=getUniquePaths(grid,row-1,col,remaining-1);
        count+=getUniquePaths(grid,row,col+1,remaining-1);
        count+=getUniquePaths(grid,row,col-1,remaining-1);

        grid[row][col] =0;

        return count;
    }

    public int uniquePathsIII(int[][] grid) {
        int count = 0;
        int startRow =-1,colRow=-1;
        for(int i=0;i<grid.length;i++) {
            for(int j=0;j<grid[0].length;j++) {
                if(grid[i][j]!=-1) count++;
                if(grid[i][j]==1) {
                    startRow = i;
                    colRow = j;
                }
            }
        }

        return getUniquePaths(grid,startRow,colRow,count-1);
    }
}
