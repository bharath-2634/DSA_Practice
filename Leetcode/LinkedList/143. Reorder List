Solution : 
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseNode(ListNode node) {
        ListNode p=node,q=node,temp=null;
        
        while(p!=null) {
            q = p.next;
            p.next = temp;
            temp = p;
            p = q;
        }
        
        return temp;
    }

    public void reorderList(ListNode head) {
        ListNode slow=head,fast=head;
        
        while(fast!=null && fast.next!=null) {
            fast = fast.next.next;
            slow = slow.next;
        }
        
        ListNode list1 = head;
        ListNode list2 = reverseNode(slow.next);
        slow.next = null;

        while(list2!=null) {
           ListNode temp1 = list1.next;
           ListNode temp2 = list2.next;
           
           list1.next = list2;
           list2.next = temp1;
           
           list1 = temp1;
           list2 = temp2;
        }
    }
}
