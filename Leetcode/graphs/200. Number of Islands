Questionhttps://leetcode.com/problems/number-of-islands/description/

Solution:
/*

This is DFS Solution

class Solution {
    public int dfs(char[][] grid,int row,int col) {

        if(row<0 || row>=grid.length || col<0 || col>=grid[0].length || grid[row][col]=='0') return 0;

        grid[row][col] = '0';

        return dfs(grid,row+1,col) + dfs(grid,row-1,col) + dfs(grid,row,col+1) + dfs(grid,row,col-1);
    }

    public int numIslands(char[][] grid) {
        
        int count = 0;

        for(int i=0;i<grid.length;i++) {
            for(int j=0;j<grid[0].length;j++) {
                if(grid[i][j]=='1') {
                    count++;
                    dfs(grid,i,j);
                }
            }
        }

        return count;
    }
}
*/

class Pair {
    int row;
    int col;
    
    public Pair(int row,int col) {
        this.row = row;
        this.col = col;
    }
}

class Solution {
    public int numIslands(char[][] grid) {
        int count = 0;
        Queue<Pair> queue = new LinkedList<>();

        int[] delRow = {+1,0,-1,0};
        int[] delCol = {0,+1,0,-1};

        for(int i=0;i<grid.length;i++) {
            for(int j=0;j<grid[i].length;j++) {
                if(grid[i][j]=='1') {
                    queue.add(new Pair(i,j));
                    grid[i][j] = '0';
                    count++;

                    while(!queue.isEmpty()) {
                        Pair p = queue.poll();
                        int row = p.row;
                        int col = p.col;

                        for(int move=0;move<4;move++) {
                            int newRow = row + delRow[move];
                            int newCol = col + delCol[move];
                            if(newRow>=0 && newRow<grid.length && newCol>=0 && newCol<grid[0].length && grid[newRow][newCol]=='1') {
                                queue.add(new Pair(newRow,newCol));
                                grid[newRow][newCol] = '0';
                            }
                        }
                    }
                }
            }
        }

        return count;
    }
}
