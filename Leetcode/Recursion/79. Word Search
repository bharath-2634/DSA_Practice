Solution:https://leetcode.com/problems/word-search/

Solution:
class Solution {

    public boolean getStatus(char[][] board,String word,StringBuilder sb, int row,int col,int idx) {
        if(idx==word.length()) return true;
    
        if(row<0 || row>=board.length || col<0 || col>=board[0].length) return false;

        if(board[row][col]!=word.charAt(idx)) return false;

        char temp = board[row][col];
        board[row][col] = '.';
        sb.append(temp);

        boolean found =  getStatus(board,word,sb,row+1,col,idx+1) ||
        getStatus(board,word,sb,row-1,col,idx+1) ||
        getStatus(board,word,sb,row,col+1,idx+1) ||
        getStatus(board,word,sb,row,col-1,idx+1);

        sb.deleteCharAt(sb.length()-1);
        board[row][col] = temp;

        return found;
    }

    public boolean exist(char[][] board, String word) {
        
        for(int i=0;i<board.length;i++) {
            for(int j=0;j<board[0].length;j++) {
                if(board[i][j]==word.charAt(0) && getStatus(board,word,new StringBuilder(),i,j,0)) {
                    return true;
                }
            }
        }

        return false;
    }
}
