Question:  https://leetcode.com/problems/palindrome-partitioning/

Solution:
class Solution {
    public boolean isPalindrome(String s) {

        String s_rev = new StringBuilder(s).reverse().toString();
        return s.equals(s_rev);
    }

    public void generatePartition(String s,List<List<String>> res,List<String> ds,int idx) {
        if(idx==s.length()) {
            res.add(new ArrayList<>(ds));
            return;
        }

        for(int i=idx;i<s.length();i++) {
            String subString = s.substring(idx,i+1);
            if(isPalindrome(subString)) {
                ds.add(subString);
                generatePartition(s,res,ds,i+1);
                ds.remove(ds.size()-1);
            }
        }
        
    }

    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();
        generatePartition(s,res,new ArrayList<>(),0);
        return res;
    }
}
