Question: https://leetcode.com/problems/combination-sum/

Solution:
class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        
        getCombinationSum(candidates,target,res,new ArrayList<>(),0);

        return res;
    }

    public void getCombinationSum(int[] nums,int target,List<List<Integer>> res,List<Integer> ds,int idx) {
        if(idx>=nums.length) return;

        if(target==0) {
            res.add(new ArrayList<>(ds));
            return;
        }

        if(nums[idx]<=target) {
            ds.add(nums[idx]);
            getCombinationSum(nums,target-nums[idx],res,ds,idx);
            ds.remove(ds.size()-1);
        }

        getCombinationSum(nums,target,res,ds,idx+1);
    }
}
