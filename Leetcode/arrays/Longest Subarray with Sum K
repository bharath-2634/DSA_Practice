Question : https://www.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1

Solution : 
// User function Template for Java

class Solution {
    /* This is My brute force Approach */
    /*public int longestSubarray(int[] arr, int k) {
        
        int max_len = 0;
        for(int i=0;i<arr.length;i++) {
            int sum =0 ;
            for(int j=i;j<arr.length;j++) {
                sum+=arr[j];
                
                if(sum==k) {
                    max_len = Math.max(max_len,(j-i+1));
                }

            }
        }
        
        return max_len;
    }*/
    
    public int longestSubarray(int[] arr, int k) {
        
        HashMap<Integer,Integer> pMap = new HashMap<>();
        pMap.put(0,-1);
        
        int sum=0,max_len=0;
        
        for(int i=0;i<arr.length;i++) {
            sum+=arr[i];
            
            if(pMap.containsKey(sum - k)) {
                int len = i - pMap.get(sum - k);
                max_len = Math.max(max_len, len);
            }
            
            if(!pMap.containsKey(sum)) {
                pMap.put(sum,i);
            }
            
        }
        
        return max_len;
    }
    
}
