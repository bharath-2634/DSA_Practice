Question :https://leetcode.com/problems/number-of-zero-filled-subarrays/

Solution:
class Solution {
    /* This is my brute force approach
    public long zeroFilledSubarray(int[] nums) {
        
        long count=0;

        for(int i=0;i<nums.length;i++) {
            for(int j=i;j<nums.length;j++) {
                if(nums[j]==0) count++;
                else break;
            }
        }

        return count;
    }
    */

    public long zeroFilledSubarray(int[] nums) {

        // int right=0;
        // long count=0;

        // while(right<nums.length) {
        //     int left = right;
        //     while(right<nums.length && nums[right]==0) {
        //         count+=(right-left+1);
        //         right++;
        //     }
        //     right++;
        // }

        // return count;

        long count=0;
        long max=0;
        for(int num:nums){
            if(num==0){
                count++;
                max+=count;
            }
            else count=0;
        }
        return max;
    }
}
