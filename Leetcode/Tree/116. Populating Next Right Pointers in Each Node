Question : https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/

Solution : 
/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution {

    public void getConnectedTree(Node node) {

        if (node == null || node.left == null || node.right == null) return;

        node.left.next = node.right;
        
        if(node.next!=null) {
            node.right.next = node.next.left; // got stuck here
        }

        getConnectedTree(node.left);
        getConnectedTree(node.right);
    }

    public Node connect(Node root) {
        if(root==null) return null;

        getConnectedTree(root);
        
        return root;
    }
}
