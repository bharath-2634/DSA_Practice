Question : https://leetcode.com/problems/path-sum/
Solution : 
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean checkPathSum(TreeNode node,int target) {

        if(node==null) {
            return false;
        }

        if(node.left==null && node.right==null && target==node.val) return true;

        return checkPathSum(node.left,target-node.val) || checkPathSum(node.right,target-node.val);
    }

    public boolean hasPathSum(TreeNode root, int targetSum) {
        
        if(root==null) return false;
        if(root.left==null && root.right==null && root.val==targetSum) return true;

        targetSum-=root.val;
        return checkPathSum(root.left,targetSum) || checkPathSum(root.right,targetSum);
    }
}
