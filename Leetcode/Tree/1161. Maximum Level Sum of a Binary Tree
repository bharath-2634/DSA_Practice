Question : https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/

Solution : 
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        if(root==null) return 0;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int level=0;
        int max_sum = Integer.MIN_VALUE;
        int min_level = Integer.MAX_VALUE;

        while(!queue.isEmpty()) {
            int len = queue.size();
            int level_sum = 0;
            for(int i=0;i<len;i++) {
                TreeNode node = queue.poll();
                level_sum+=node.val;

                if(node.left!=null) queue.offer(node.left);
                if(node.right!=null) queue.offer(node.right);
            }
            if(level_sum > max_sum) {
                max_sum = level_sum;
                min_level = level;
            }
            level++;
        }

        
        return min_level+1;
    }
}
