Question :https://leetcode.com/problems/binary-tree-level-order-traversal-ii/

Solution : 
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void getLevelOrder(TreeNode node,int level, List<List<Integer>> res) {
        if(node==null) return;

        List<Integer> data = null;
        if(res.size() <= level) {
            data = new ArrayList<>();
            res.add(0,data);
        }

        data = res.get(res.size()-level-1);
        data.add(node.val);

        getLevelOrder(node.left,level+1,res);
        getLevelOrder(node.right,level+1,res);
    }

    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        
        List<List<Integer>> res = new ArrayList<>();
        getLevelOrder(root,0,res);
        return res;
    }
}
