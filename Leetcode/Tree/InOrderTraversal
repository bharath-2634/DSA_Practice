Question : https://www.geeksforgeeks.org/problems/inorder-traversal/1

Solution : 
/* A Binary Tree node

class Node {
    int data;
    Node left, right;
   Node(int item)    {
        data = item;
        left = right = null;
    }
}
*/
class Solution {
    
    /*
    This is my Recursive Approach
    public void traversal(Node node,ArrayList<Integer> res) {
        if(node==null) return;

        traversal(node.left,res);
        res.add(node.data);
        traversal(node.right,res);
    }
    
    ArrayList<Integer> inOrder(Node root) {
        ArrayList<Integer> res = new ArrayList<Integer>();
        traversal(root,res);
        return res;
    }*/
    
    /* This is Iterative Approach*/
    ArrayList<Integer> inOrder(Node root) {
        
        ArrayList<Integer> res = new ArrayList<>();
        if(root==null) return res;
        Stack<Node> st = new Stack<>();
        
        // st.push(root);
        
        while(!st.isEmpty() || root!=null) {
            
            while(root!=null) {
                st.push(root);
                root = root.left;
            }
            
            root = st.pop();
            res.add(root.data);
            root = root.right;
        }
        
        return res;
    }
}
