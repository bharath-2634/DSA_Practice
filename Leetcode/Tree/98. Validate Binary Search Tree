Question :https://leetcode.com/problems/validate-binary-search-tree/description/

Solution :
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean checkIsValidBST(TreeNode node,long min,long max) {

        if(node==null) return true;

        if(node.val <= min || node.val >= max) return false;

        return checkIsValidBST(node.left,min,node.val) && checkIsValidBST(node.right,node.val,max);
    }

    public boolean isValidBST(TreeNode root) {
        if(root==null) return false;
        if(root.left==null && root.right==null) return true;
        return checkIsValidBST(root,Long.MIN_VALUE,Long.MAX_VALUE);
    }
}
